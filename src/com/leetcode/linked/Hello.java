package com.leetcode.linked;

public class Hello {
    /*
----- 链 表 -----

辅助数据结构：
```C++
struct ListNode {
    int val;
    ListNode *next;
    ListNode(int x): val(x), next(NULL) {}
};
```

```java

public class ListNode {
    int val;
    ListNode next;
    ListNode(int x) { val = x; }
}

```

链表01 - 进阶反转链表 - 中等 - 92

反转一个链表中从m到n的元素。

比如：对于一个链表1->2->3->4->5->NULL，m = 2， n = 4
则返回链表 1->4->3->2->5->NULL

注意：可以假设1<=m<=n<=链表长度。

-----------------------------------------------------------------

链表02 - 成对交换链表节点 - 中等 - 24

给定一个链表，为每两个相邻节点做一次交换给定一个链表，为每两个相邻节点做一次交换。
要求不能修改节点的值，只能修改链表结构。要求O(1)的空间复杂度。

比如：1->2->3->4，应该返回2->1->4->3。

-----------------------------------------------------------------

链表03 - 链表相加低阶 - 中等 - 2

给定两个非空链表，分别代表两个非负整数。链表中的数字以逆序排列并且每个节点只包含一个个位数。
将两个链表所代表的数字相加并且以链表的形式返回这个和。

比如：输入2->4->3和5->6->4
应该返回 7->0->8

-----------------------------------------------------------------

链表04 - 链表相加高阶 - 中等 - 2

【题中包含的进阶技术：设计数据结构】

给定两个非空链表，分别代表两个非负整数。这次链表中的数字以顺序排列，同样每个链表包含一个个位数字。
计算两个链表所代表的数字的和，并以链表的形式返回这个和。

你可以假设给定的输入不会包含为0的开头，除非这个链表代表的数字本身就是0。

比如：
给定7->2->4->3和5->6->4，
输出7->8->0->7

提示：
如果我们要求不可以修改给出的链表呢？也就是说，先反转链表再利用链表02的解，这个做法是不被允许的。
提示也许可以创建一种数据结构来解决这个问题。

-----------------------------------------------------------------

链表05 - 删除链表元素 - 简单 - 203

【题中包含的进阶技术：虚拟头结点】

删除链表中值为val的元素。

比如：
给出: 1->2->6->3->4->5->6，val = 6
返回: 1->2->3->4->5

-----------------------------------------------------------------

链表06 - 从有序链表中删除重复元素 - 中等 - 24

【题中包含的进阶技术：虚拟头结点】

给定一个有序链表，删除其中所有重复的元素，只留下不存在重复的元素。

比如：
给出1->2->3->3->4->4->5，返回1->2->5，
给出1->1->1->2->3，返回2->3。

-----------------------------------------------------------------

链表07 - 从链表中删除倒数第N个元素 - 中等 - 19

【题中包含的进阶技术：双指针技术】

给定一个链表，删除其倒数第N个元素并返回头结点。

比如：

给定： 1->2->3->4->5， n = 2，
则应该返回 1->2->3->5。

注意：
n为有效值。

提示：使用双指针技术来实现只用一次遍历求解。

-----------------------------------------------------------------

链表08 - 旋转链表 - 中等 - 61

【题中包含的进阶技术：双指针技术】

给定一个链表，让链表向右旋转k位，其中k为非负数。

比如: 1->2->3->4->5->NULL，k = 2
返回: 4->5->1->2->3->NULL。

-----------------------------------------------------------------

链表09 - 重排链表 - 难 - 143

【题中包含的进阶技术：双指针技术】

给定一个链表L: L0→L1→…→Ln-1→Ln,将其重排序为 L0→Ln→L1→Ln-1→L2→Ln-2→…

注意：
原地排序，并且请思考如何只用一次遍历求解。

比如：
1->2->3->4，返回1->4->2->3。

-----------------------------------------------------------------
     */
}
