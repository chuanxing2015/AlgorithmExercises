package com.leetcode.array;

public class Hello {
    /*
----- 数 组 -----

-----------------------------------------------------------------

数组01 - 0的移动 - 简单 - 283

给定一个数组nums，写一个函数，将数组内的0移动到数组末尾，并保持其他非零元素在原数组中的相对位置不变。
比如，给定nums = [0, 1, 0, 3, 12]，调用你的函数之后，nums应该变成[1, 3, 12, 0, 0]。

注意：
1. 请直接在传入的数组对象上修改，而不是另外创建一份拷贝（术语叫做 in-place，也有中译为“原地”）。
2. 尽量减少操作指令代码的行数。

-----------------------------------------------------------------

数组02 - 删除元素 - 简单 - 27

给定一个数组和一个值，原地移除数组中所有给定的值，并返回新数组的长度。
不允许申请额外空间，确保空间复杂度为O(1)。
数组中的元素可以被改变，不用考虑超出新长度之后的空间遗留。

比如：
给定nums = [3, 2, ,2 3]， val = 3，
你的函数应该返回length = 2， nums = [2, 2]。

-----------------------------------------------------------------

数组03 - 从有序数组中删除重复元素 - 简单 - 26

给定一个有序数组，原地删除重复元素使得数组中的元素只保留一个，并且返回新长度。
禁止申请额外空间，确保空间复杂度为O(1)。

比如：
给定nums = [1, 1, 2]，

你的函数应该返回length = 2，nums = [1, 2]。
不用考虑超出新长度之后的空间遗留。

-----------------------------------------------------------------

数组04 - 从有序数组中删除重复元素2 - 中等 - 80

与数组03题条件相同，但是变更一个要求：可以允许元素最多重复2次。

比如，给定nums = [1, 1, 1, 2, 2, 3]，
返回length = 5， nums = [1, 1, 2, 2, 3]。同样不用考虑超出新长度之后的空间遗留。

-----------------------------------------------------------------

数组05 - 两数的和（输入数组已排序） - 简单 - 167

【题中包含的数组的进阶技术：对撞指针技术】

给定一个整形数组，并且数组内元素已经按升序排列，找出两个元素，使得它们之和与给定的数相等。

函数应该返回找到的这两个元素的索引，并且第一个元素的索引小于等于第二个元素的索引，并且元素索引起始位置是基于1而不是基于0。

你可以假设给定的目标数在数组中必定找得到对应的两个元素。

比如：
输入： numbers = [2, 7, 11, 15], target = 9
输出： index = 1, index = 2

-----------------------------------------------------------------

数组06 - 装最多的水 - 中等 - 11

【题中包含的数组的进阶技术：对撞指针技术】

给出一个非负整数 a1, a2, ..., an,它们分别代表x轴上的一个点(i, ai)，在每个点上画高度为ai的“墙”，
用来代表容器。选择两堵墙，使得它们和x轴围起来的容器装水容量最大。

注意：给出的n>=2。

-----------------------------------------------------------------

数组07 - 排序颜色 - 中等 - 75

【题中包含的数组的进阶技术：对撞指针、三路快速排序】

给定一个数组，其中有n个元素，分别为红色、白色和蓝色，请将数组中的元素进行排序，使得颜色相同的元素排在一起，并且颜色顺序为红、白、蓝。
我们使用整数0、1、2分别代表红、白、蓝3种颜色。

注意：禁止使用标准库提供的排序算法。
提示：尝试使用三路快速排序的思路以O(n)的时间复杂度解决问题。

-----------------------------------------------------------------

数组08 - 找到数组中第k大的元素 - 中等 - 215

【题中包含的数组的进阶技术：对撞指针、快速排序】

在一个无序数组中找到第k大的元素。注意这里的第k大是指在排序顺序中第k大的元素，而不是第k个不同的元素。

比如：
给定[3, 2, 1, 5, 6, 4]，k = 2，则应该返回5。

注意：
你可以假设k的值是有效的。

提示：
使用快速排序的思想可以以O(n)的时间复杂度解决该问题。

-----------------------------------------------------------------

数组09 - 最小尺寸子数组之和 - 中等 - 209

【题中包含的数组的进阶技术：滑动窗口技术】

给定一个整形数组和一个数组s，找出数组中最短的一个连续子数组，使得连续子数组中的元素之和sum>=s。
返回这个最短连续子数组。

比如：
nums = [2, 3, 1, 2, 4, 3], s = 7
答案为[4, 3]

-----------------------------------------------------------------

数组10 - 没有重复字符的最长子串 - 中等 - 3

【题中包含的数组的进阶技术：滑动窗口技术】

在一个字符串中寻找没有重复字母的最长子串

比如：
“abcabcbb”,结果为“abc”
“bbbbbb”，结果为“b”
“pwwkew”，结果为“wke”

-----------------------------------------------------------------

数组11 - 最小窗口子串 - 困难 - 76

给定一个字符串S和字符串T，在S中寻找最短的子串，包含T中所有的字符。

比如：
S=“ADOBECODEBAXC”，T=“ABC”
结果为“BAXC”。
     */
}
