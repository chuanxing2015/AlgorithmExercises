package com.leetcode.stack;

public class Hello {
/*
-----------------------------------------------------------------

栈01 - 括号配对 - 简单 - 20

给定一个字符串，其中只包含()，[]，{},判定字符串中的括号匹配是否合法。

比如 “()”，“()[]{}”是合法的，“(}”，“([)]”是非法的。

-----------------------------------------------------------------

栈02 - 逆波兰表达式求值 - 中等 - 150

给定一个数组，表示一个逆波兰表达式，求其值。

运算类型只有+、-、*、/。

比如：
["2", "1", "+", "3", "*"] -> ((2 + 1) * 3) -> 9
["4", "13", "5", "/", "+"] -> (4 + (13 / 5)) -> 6

-----------------------------------------------------------------

栈03 - 简化路径 - 中等 - 71

给定一个Unix风格的绝对路径，进行简化。

比如：
path = "/home/" => "/home"
path = "/a/./b/../../c/" => "/c"

注意：
考虑一些边界条件：
1. 对于path = "/../" 可以返回"/"；
2. 路径中可能存在的连续'/'，比如"/home//foo"，这种情况下应该忽略重复的斜杠并返回"/home/foo"。

栈04 - 嵌套列表平滑迭代器 - 中等 - 341

给定一个整形的嵌套列表，实现一个迭代器来使对它的遍历平滑化。

其中列表中的元素可能是一个整形元素，也可能是一个列表 —— 这个列表同样也可能同时包含整形元素或另一个子列表。

比如：
给定一个列表[[1,1],2,[1,1]]，
连续调用迭代器的next方法，直到hasNext返回false，则遍历的元素依次为[1,1,2,1,1]。

给定一个列表[1,[4,[6]]]，
同样，遍历结果应该为[1,4,6]。

（题目中已经给出了嵌套列表这个数据结构的接口的定义，请自行查看）

-----------------------------------------------------------------

 */
}
